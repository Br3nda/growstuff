version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2

jobs:
  rubydeps:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: v1-ruby-deps-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  contributors:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
    steps:
      - checkout
      - run:
          name: Check contributors
          command: script/check_contributors_md.rb

  lint:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment

      - run:
          name: Install linters
          command: ./script/install_linters.sh
      - run:
          name: Run overcommit
          command: overcommit --run
  test:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          PG_HOST: localhost
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      # The following example uses the official postgres 9.6 image, you may also use circleci/postgres:9.6
      # which includes a few enhancements and modifications. It is possible to use either image.
      - image: postgres:11.8
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: db_name
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
    environment:
      DATABASE_URL: "postgres://ubuntu@localhost:5432/db_name"
      ELASTIC_SEARCH_VERSION: "7.5.1-amd64"
      COVERAGE: True
      RAILS_ENV: test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - run:
          name: Install postgresql client
          command: sudo apt install -y postgresql-client || true
      - run:
          name: Install Elasticsearch
          command: ./script/install_elasticsearch.sh
      # Here we make sure that the secondary container boots
      # up before we run operations on the database.
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create database
          command: bundle exec rails db:create db:migrate
      - run:
          name: Precompile assets
          command: bundle exec rails assets:precompile
      - run:
          name: Create Elastic search index
          command: bundle exec rails search:reindex
      - run:
          name: Run rpsec tests
          command: bundle exec rspec spec

workflows:
  version: 2
  fullbuild:
    jobs:
      - rubydeps
      - test:
          requires:
            - rubydeps
      - lint:
          requires:
            - rubydeps # because we use rubcocop for bundler
      - contributors
