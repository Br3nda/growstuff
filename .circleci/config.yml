version: 2.1
orbs:
  ruby: circleci/ruby@0.1.2
  browser-tools: circleci/browser-tools@1.0.1
jobs:
  rubydeps:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run: gem install bundler
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - save_cache:
          key: v1-ruby-deps-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  contributors:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
    steps:
      - checkout
      - run:
          name: Check contributors
          command: script/check_contributors_md.rb

  # lint:
  #   docker:
  #     - image: circleci/ruby:2.6.5-stretch-node
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys:
  #           - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
  #     - run: gem install bundler
  #     - run:
  #         name: Install dependencies
  #         command: bundle check --path vendor/bundle || bundle install --deployment

  #     - run:
  #         name: Install linters
  #         command: ./script/install_linters.sh
  #     - run:
  #         name: Run overcommit
  #         command: overcommit --run
  test:
    docker:
      - image: circleci/ruby:2.6.5-stretch-node
        environment:
          PG_HOST: localhost
          PG_USER: ubuntu
          RAILS_ENV: test
          RACK_ENV: test
      - image: postgres:11.8
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: db_name
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
        environment:
          - cluster.name: elasticsearch
          - xpack.security.enabled: false
          - transport.host: localhost
          - network.host: 127.0.0.1
          - http.port: 9200
          - discovery.type: single-node

    environment:
      DATABASE_URL: "postgres://ubuntu@localhost:5432/db_name"
      COVERAGE: True
      RAILS_ENV: test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-ruby-deps-{{ checksum "Gemfile.lock" }}
      - run:
          name: Install dependencies
          command: bundle check --path vendor/bundle || bundle install --deployment
      - run:
          name: Install postgresql client
          command: sudo apt install -y postgresql-client || true
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      # Here we make sure that the secondary container boots
      # up before we run operations on the database.
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Create database
          command: bundle exec rails db:create db:migrate
      - run:
          name: Precompile assets
          command: bundle exec rails assets:precompile
      - run:
          name: Create Elastic search index
          command: RAILS_ENV=test bundle exec rails search:reindex
      - run:
          name: Run rpsec tests
          command: bundle exec rspec spec --fail-fast

workflows:
  version: 2
  fullbuild:
    jobs:
      - rubydeps
      - test:
          requires:
            - rubydeps
      # - lint:
      #     requires:
      #       - rubydeps # because we use rubcocop for bundler
      - contributors
